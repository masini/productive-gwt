#Productive GWT how-to

== Introduction ==
Productive GWT consists of a set of modules to be used as a basis for Web applications:
basic templates, menus, bootstrap, header, footer.

==Dependencies for the Web application==
In the pom.xml file of the Web include the following dependencies.
{{{
<dependency>
    <groupId>com.google.gwt</groupId>
    <artifactId>gwt-user</artifactId>
    <version>${gwtVersion}</version>
    <type>jar</type>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>com.google.gwt</groupId>
    <artifactId>gwt-servlet</artifactId>
    <version>${gwtVersion}</version>
    <type>jar</type>
    <scope>compile</scope>
</dependency>
<dependency>
    <groupId>productive-gwt</groupId>
    <artifactId>template</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <scope>compile</scope>
</dependency>
<dependency>
    <groupId>productive-gwt</groupId>
    <artifactId>menu</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>productive-gwt</groupId>
    <artifactId>base</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <type>jar</type>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>productive-gwt</groupId>
    <artifactId>bootstrap</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <type>jar</type>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>productive-gwt</groupId>
    <artifactId>header</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <type>jar</type>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>productive-gwt</groupId>
    <artifactId>footer</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>commons-logging</groupId>
    <artifactId>commons-logging</artifactId>
    <version>1.1.1</version>
    <type>jar</type>
    <scope>compile</scope>
</dependency>
}}}

==GWT module definition==
When you create the GWT module make sure that the files are included NomeModulo.gwt.xml inherits the elements of Productive GWT.
{{{
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Google Inc.//DTD Google Web Toolkit 2.0.3//EN"
"http://google-web-toolkit.googlecode.com/svn/tags/2.0.3/distro-source/core/src/gwt-module.dtd">
<module>

    <inherits name="org.googlecode.gwt.base.Base"/>
    <inherits name="org.googlecode.gwt.bootstrap.Bootstrap"/>
    <inherits name='org.googlecode.gwt.template.Template'/>
    <inherits name='org.googlecode.gwt.menu.Menu'/>
    <inherits name='org.googlecode.gwt.header.Header'/>
    <inherits name='org.googlecode.gwt.footer.Footer'/>

    <entry-point class="it.davideling.rubrica.client.RubricaEntryPoint" />

    <set-property name="user.agent" value="ie6"/>
</module>
}}}

===Menu===
The menu is created by an interface in the client package (or package in a client) of the form. This interface presents the signature of a method for each menu item.
{{{
public interface RubricaMenu extends SMenu {

    @SMenuItem(position=1,
        label="Home",
        icon="images/action_go.gif",
        userRoles="Amministratore"
    )
    HomeCommand homeCommand();

    @SMenuItem(position=2,
        label="Contatti",
        icon="images/action_go.gif",
        userRoles="Amministratore"
    )
    ListCommand listCommand();

    @SMenuItem(position=3,
        label="Nuovo contatto",
        icon="images/action_go.gif",
        userRoles="Amministratore"
    )
    InsertCommand insertCommand();

}
}}}
In particular, the interface must extend each method sOthers menu and the menu should use the annotation @ SMenuItem. The entry has attributes that define the position of the menu entry, the label, the icon to use and professional roles.
{{{
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.METHOD, ElementType.TYPE})
public @interface SMenuItem {
        int position();
        String label();
        String icon();
        String shortcut() default "";
        String[] userRoles() default {""};
}
}}}

===Command===
The menu interface methods return objects that implement Command. These items must then implement the execute() method.
{{{
public class HomeCommand implements Command {

        public void execute() {
            HomePanel homePanel = new HomePanel();
            TemplateManager.setApplicationContent(homePanel);
        }

}
}}}
In the example, execute() method uses TemplateManager to change the application's main panel. In this case the user back to Home.
===Entry Point===
{{{
public class RubricaEntryPoint implements EntryPoint {

    public void onModuleLoad() {
            // Titolo dell'applicazione
        TemplateManager.setApplicationTitle(new Label("RUBRICA"));

            // Creazione del menu con deferred binding
            SMenu menu = GWT.create(RubricaMenu.class);
         TemplateManager.setMenu(menu);

            // Come default imposto la Home Page
        TemplateManager.setApplicationContent(new HomePanel());
    }

}
}}}
In the example above are set: the application title, the menu and the initial content.

===web.xml===
In web.xml is defined and configured the bootstrap servlet.
{{{
<servlet>
<servlet-name>GWTBootstrapServiceServlet</servlet-name>
<servlet-class>org.googlecode.gwt.bootstrap.server.GWTBootstrapServiceServlet</servlet-class>
<init-param>
    <param-name>resolver</param-name>
    <param-value>org.googlecode.gwt.bootstrap.server.WebLogicBootstrapDataResolver</param-value>
</init-param>
<init-param>
    <param-name>userInfoResolver</param-name>
    <param-value>org.googlecode.gwt.bootstrap.server.ValidationUserInfoResolver</param-value>
</init-param>
<init-param>
    <param-name>javaEESecurityExtractor</param-name>
    <param-value>org.googlecode.gwt.bootstrap.server.security.DefaultJavaEESecurityExtractor</param-value>
</init-param>
<init-param>
    <param-name>applicationCode</param-name>
    <param-value>APPLICATION_CODE</param-value>
</init-param>
<init-param>
    <param-name>applicationName</param-name>
    <param-value>APPLICATION_NAME</param-value>
</init-param>
<init-param>
    <param-name>applicationVersion</param-name>
    <param-value>APPLICATION_VERSION</param-value>
</init-param>
<init-param>
    <param-name>homePageURLString</param-name>
    <param-value>HOME_PAGE_URL</param-value>
</init-param>
</servlet>
<servlet-mapping>
    <servlet-name>GWTBootstrapServiceServlet</servlet-name>
    <url-pattern>COMPLETE_GWT_MODULE_NAME/bootstrap</url-pattern>
</servlet-mapping>
}}}